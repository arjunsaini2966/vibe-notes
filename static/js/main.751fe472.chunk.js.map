{"version":3,"sources":["component/Header.js","component/Main.js","component/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","Main","_ref","currentNote","updateNote","_React$useState","React","useState","_React$useState2","Object","slicedToArray","selectedTab","setSelectedTab","converter","Showdown","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","js_default","value","body","onChange","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","makeHtml","minEditorHeight","heightUnits","Sidebar","props","noteElements","notes","map","note","index","key","id","concat","onClick","setCurrentNoteId","split","event","deleteNote","newNote","App","JSON","parse","localStorage","getItem","setNotes","_React$useState3","_React$useState4","currentNoteId","createNewNote","nanoid","prevNotes","toConsumableArray","findCurrentNote","find","useEffect","setItem","stringify","component_Header","length","react_split_es","sizes","direction","noteId","stopPropagation","oldNotes","filter","text","newArray","i","oldNote","unshift","objectSpread","push","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.751fe472.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <img src=\"./images/logo.png\" className=\"logo\" alt=\"logo\" />\n      <h2>Vibe Notes</h2>\n\n      <h5>React Project - 4</h5>\n    </div>\n  );\n}\nexport default Header;\n","import React from \"react\";\nimport ReactMde from \"react-mde\";\nimport Showdown from \"showdown\";\n\nexport default function Main({ currentNote, updateNote }) {\n  const [selectedTab, setSelectedTab] = React.useState(\"write\");\n\n  const converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true,\n  });\n\n  return (\n    <section className=\"pane editor\">\n      <ReactMde\n        value={currentNote.body}\n        onChange={updateNote}\n        selectedTab={selectedTab}\n        onTabChange={setSelectedTab}\n        generateMarkdownPreview={(markdown) =>\n          Promise.resolve(converter.makeHtml(markdown))\n        }\n        minEditorHeight={80}\n        heightUnits=\"vh\"\n      />\n    </section>\n  );\n}\n","import React from \"react\";\n\nexport default function Sidebar(props) {\n  const noteElements = props.notes.map((note, index) => (\n    <div key={note.id}>\n      <div\n        className={`title ${\n          note.id === props.currentNote.id ? \"selected-note\" : \"\"\n        }`}\n        onClick={() => props.setCurrentNoteId(note.id)}\n      >\n        <h4 className=\"text-snippet\">{note.body.split(\"\\n\")[0]}</h4>\n        <button\n          className=\"delete-btn title-delete\"\n          onClick={(event) => props.deleteNote(event, note.id)}\n        >\n          <i className=\"gg-trash-empty\"></i>\n        </button>\n      </div>\n    </div>\n  ));\n\n  return (\n    <section className=\"pane sidebar\">\n      <div className=\"sidebar-header\">\n        <h3>Notes</h3>\n        <button className=\"new-note\" onClick={props.newNote}>\n          +\n        </button>\n      </div>\n      {noteElements}\n    </section>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport Header from \"./component/Header\";\nimport Main from \"./component/Main\";\nimport Sidebar from \"./component/Sidebar\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\n\nexport default function App() {\n  const [notes, setNotes] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"notes\")) || []\n  );\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n    (notes[0] && notes[0].id) || \"\"\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\",\n    };\n    setNotes((prevNotes) => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes((oldNotes) => {\n      const newArray = [];\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({ ...oldNote, body: text });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n      return newArray;\n    });\n  }\n\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes((oldNotes) => oldNotes.filter((note) => note.id !== noteId));\n  }\n\n  function findCurrentNote() {\n    return (\n      notes.find((note) => {\n        return note.id === currentNoteId;\n      }) || notes[0]\n    );\n  }\n\n  return (\n    <main>\n      <Header />\n      {notes.length > 0 ? (\n        <Split sizes={[30, 70]} direction=\"horizontal\" className=\"split\">\n          <Sidebar\n            notes={notes}\n            currentNote={findCurrentNote()}\n            setCurrentNoteId={setCurrentNoteId}\n            newNote={createNewNote}\n            deleteNote={deleteNote}\n          />\n          {currentNoteId && notes.length > 0 && (\n            <Main currentNote={findCurrentNote()} updateNote={updateNote} />\n          )}\n        </Split>\n      ) : (\n        <div className=\"no-notes\">\n          <h1>You have no notes</h1>\n          <button className=\"first-note\" onClick={createNewNote}>\n            Create one now\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}